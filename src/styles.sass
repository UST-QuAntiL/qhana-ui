/* You can add global styles to this file, and also import other style files */
@use '~@angular/material' as mat

@include mat.core()

$my-primary: mat.define-palette(mat.$deep-purple-palette)
$my-accent: mat.define-palette(mat.$amber-palette, A200, A100, A400)

// The "warn" palette is optional and defaults to red if not specified.
$my-warn: mat.define-palette(mat.$red-palette)

$my-theme: mat.define-light-theme((color: (primary: $my-primary,accent: $my-accent,warn: $my-warn,)))
$my-dark-theme: mat.define-dark-theme((color: (primary: $my-primary,accent: $my-accent,warn: $my-warn,)))

@include mat.all-component-themes($my-theme)

//expose the as css variables to be used in other styles (second :root.root to get higher specificity than milkdown css which also defines --primary
:root, :root.root
    --background: #{mat.get-color-from-palette(mat.$light-theme-background-palette, 'background')}
    --border-color: #aaa
    --text: #{mat.get-color-from-palette(mat.$light-theme-foreground-palette, 'text')}
    --text-inv: #{mat.get-color-from-palette(mat.$dark-theme-foreground-palette, 'text')}
    --text-washed: #{mat.get-color-from-palette(mat.$light-theme-foreground-palette, 'secondary-text')}
    --text-disabled: #{mat.get-color-from-palette(mat.$light-theme-foreground-palette, 'disabled-text')}
    --primary: #{mat.get-color-from-palette($my-primary, 'default')}
    --primary-darker: #{mat.get-color-from-palette($my-primary, 'darker')}
    --primary-lighter: #{mat.get-color-from-palette($my-primary, 'lighter')}
    --primary-text: #{mat.get-color-from-palette($my-primary, 'text')}
    --primary-text-visited: #{mat.get-color-from-palette($my-primary, 'darker')}
    --accent: #{mat.get-color-from-palette($my-accent, 'default')}
    --accent-darker: #{mat.get-color-from-palette($my-accent, 'darker')}
    --accent-lighter: #{mat.get-color-from-palette($my-accent, 'lighter')}
    --accent-text: #{mat.get-color-from-palette($my-accent, 'text')}
    --warn: #{mat.get-color-from-palette($my-warn, 'default')}
    --warn-darker: #{mat.get-color-from-palette($my-warn, 'darker')}
    --warn-lighter: #{mat.get-color-from-palette($my-warn, 'lighter')}
    --warn-text: #{mat.get-color-from-palette($my-warn, 'text')}
    --text-primary: #{mat.get-color-from-palette($my-primary, 'default-contrast')}
    --text-primary-lighter: var(--text, black)
    --text-primary-darker: var(--text-primary)
    --text-accent: #{mat.get-color-from-palette($my-accent, 'default-contrast')}
    //--text-accent-lighter: #{mat.get-color-from-palette($my-accent, 'lighter-contrast'}
    //--text-accent-darker: #{mat.get-color-from-palette($my-accent, 'darker-contrast'}
    --text-warn: #{mat.get-color-from-palette($my-warn, 'default-contrast')}
    //--text-warn-lighter: #{mat.get-color-from-palette($my-warn, 'lighter-contrast'}
    //--text-warn-darker: #{mat.get-color-from-palette($my-warn, 'darker-contrast'}
    // line is for milkdown
    --line: 150,150,150

.mat-card
    --background: #{mat.get-color-from-palette(mat.$light-theme-background-palette, 'card')}

.mat-dialog
    --background: #{mat.get-color-from-palette(mat.$light-theme-background-palette, 'dialog')}

@media (prefers-color-scheme: dark)
    :root, :root.root
        @include mat.all-component-themes($my-dark-theme)
        --background: #{mat.get-color-from-palette(mat.$dark-theme-background-palette, 'background')}
        --border-color: #555
        --text: #{mat.get-color-from-palette(mat.$dark-theme-foreground-palette, 'text')}
        --text-inv: #{mat.get-color-from-palette(mat.$light-theme-foreground-palette, 'text')}
        --text-washed: #{mat.get-color-from-palette(mat.$dark-theme-foreground-palette, 'secondary-text')}
        --text-disabled: #{mat.get-color-from-palette(mat.$dark-theme-foreground-palette, 'disabled-text')}
        --primary: #{mat.get-color-from-palette($my-primary, 'default')}
        --primary-darker: #{mat.get-color-from-palette($my-primary, 'darker')}
        --primary-lighter: #{mat.get-color-from-palette($my-primary, 'lighter')}
        --primary-text: #{mat.get-color-from-palette($my-primary, A100)}
        --primary-text-visited: #{mat.get-color-from-palette($my-primary, A200)}
        --accent: #{mat.get-color-from-palette($my-accent, 'default')}
        --accent-darker: #{mat.get-color-from-palette($my-accent, 'darker')}
        --accent-lighter: #{mat.get-color-from-palette($my-accent, 'lighter')}
        --accent-text: #{mat.get-color-from-palette($my-accent, 'text')}
        --warn: #{mat.get-color-from-palette($my-warn, 'default')}
        --warn-darker: #{mat.get-color-from-palette($my-warn, 'darker')}
        --warn-lighter: #{mat.get-color-from-palette($my-warn, 'lighter')}
        --warn-text: #{mat.get-color-from-palette($my-warn, 'text')}
        --text-primary: #{mat.get-color-from-palette($my-primary, 'default-contrast')}
        --text-primary-lighter: var(--text-inv, black)
        --text-primary-darker: var(--text-primary)
        --text-accent: #{mat.get-color-from-palette($my-accent, 'default-contrast')}
        //--text-accent-lighter: #{mat.get-color-from-palette($my-accent, 'lighter-contrast'}
        //--text-accent-darker: #{mat.get-color-from-palette($my-accent, 'darker-contrast'}
        --text-warn: #{mat.get-color-from-palette($my-warn, 'default-contrast')}
        //--text-warn-lighter: #{mat.get-color-from-palette($my-warn, 'lighter-contrast'}
        //--text-warn-darker: #{mat.get-color-from-palette($my-warn, 'darker-contrast'}
        // line is for milkdown
        --line: 170,170,170

    .mat-card
        --background: #{mat.get-color-from-palette(mat.$dark-theme-background-palette, 'card')}
        --border-color: #888
        --text-primary: #{mat.get-color-from-palette($my-primary, 'card-contrast')}
        --text-primary-lighter: var(--text-inv, black)
        --text-primary-darker: var(--text-primary)
        --text-accent: #{mat.get-color-from-palette($my-accent, 'card-contrast')}
        --text-warn: #{mat.get-color-from-palette($my-warn, 'card-contrast')}

    .mat-dialog
        --background: #{mat.get-color-from-palette(mat.$dark-theme-background-palette, 'dialog')}
        --text-primary: #{mat.get-color-from-palette($my-primary, 'dialog-contrast')}
        --text-primary-lighter: var(--text-inv, black)
        --text-primary-darker: var(--text-primary)
        --text-accent: #{mat.get-color-from-palette($my-accent, 'dialog-contrast')}
        --text-warn: #{mat.get-color-from-palette($my-warn, 'dialog-contrast')}

    .card.mat-card
        box-shadow: none
        border: 2px solid var(--border-color)

$my-typography: mat.define-typography-config()

// expose typography as css classes
.t-page-headline
    @include mat.typography-level($my-typography, 'display-2')
    margin-block: 0.8ex

.t-headline
    @include mat.typography-level($my-typography, 'headline')

.t-title
    @include mat.typography-level($my-typography, 'title')

.t-subheading
    @include mat.typography-level($my-typography, 'subheading-2')

.t-subsubheading
    @include mat.typography-level($my-typography, 'subheading-1')

.t-paragraph
    @include mat.typography-level($my-typography, 'body-1')

.text
    color: var(--text, black)

.text-primary
    color: var(--text-primary)

.text-light-primary
    color: var(--text-light-primary)

html, body
    height: 100%

body
    margin: 0
    font-family: Roboto, "Helvetica Neue", sans-serif
    background-color: var(--background, white)
    color: var(--text, black)

::any-link
    color: var(--primary-text)

::any-link:hover, ::any-link:visited
    color: var(--primary-text-visited)

::selection
    background-color: var(--primary-lighter)
    color: var(--text-primary-lighter, black)

// overwrite flex or grid display for hidden nodes
*[hidden]
    display: none !important

////////////////////////////////////////////////////////////////////////////////
// top level classes applying to all components ////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

.big-content
    // max width for readability
    max-width: 60rem
    // auto center content
    margin-inline-start: auto
    margin-inline-end: auto

.big-nav-tabs .mat-tab-list
    color: red
    left: calc(calc(100% - 60rem)/2)
    max-width: 60rem

.page-item-list
    display: flex
    flex-direction: column
    gap: 1rem

.title-link
    color: var(--primary-text)

.title-link:visited
    color: var(--primary-text-visited)

.scroll-spacer
    height: 20vh

.bold
    font-weight: 500

.italic
    font-style: italic

// material extra styles
.card.mat-card
    color: var(--text)
    background-color: var(--background)

// Milkdown markdown content

.markdown-wrapper > .milkdown
    --typography: Roboto,HelveticaNeue-Light,Helvetica Neue Light,Helvetica Neue,Helvetica,Arial,Lucida Grande,sans-serif
    --code: Consolas,Monaco,Andale Mono,Ubuntu Mono,monospace
    --radius: 4px
    --lineWidth: 1px

.milkdown .ProseMirror-selectednode
    outline: var(--lineWidth) solid var(--border-color)

.markdown-wrapper > .milkdown
    max-width: revert
    padding: revert
    box-shadow: revert
    color: var(--text)
    background: var(--background)
    font-family: var(--typography)
    margin-left: auto
    margin-right: auto

.markdown-wrapper > .milkdown > .editor
    padding: unset

.markdown-wrapper > .milkdown > .editor > *
    margin-block: inherit

.markdown-wrapper > .milkdown ::selection
    background: var(--primary-lighter)
    color: var(--text-primary-lighter)

.milkdown > .editor > *
    margin-block: 0.3rem

.milkdown .slash-dropdown
    z-index: 1

.milkdown .heading::before
    margin-inline-end: 0.3em
    opacity: 0.5

.milkdown .heading.h1::before
    content: "#"

.milkdown .heading.h2::before
    content: "##"

.milkdown .heading.h3::before
    content: "###"

.milkdown .heading.h4::before
    content: "####"

.milkdown .heading.h5::before
    content: "#####"

.milkdown .heading.h6::before
    content: "######"

.milkdown .katex::before
    content: "$"
    margin-inline: 0.2em
    opacity: 0.5

.milkdown .katex::after
    content: "$"
    margin-inline: 0.2em
    opacity: 0.5

.milkdown .math-block .katex::before
    content: none
    margin-inline: 0.2em
    opacity: 0.5

.milkdown .math-block .katex::after
    content: none
    margin-inline: 0.2em
    opacity: 0.5

.milkdown .blockquote
    border-left: 4px solid var(--primary)

.milkdown .link
    color: var(--primary-text)

.milkdown .link:hover
    color: var(--primary-text-visited)
    box-shadow: unset

.milkdown .link:focus,.milkdown .link:active
    color: var(--primary-text-visited)

.milkdown .code-inline
    background-color: var(--background)
    color: var(--text-washed)

.milkdown .code-fence
    .token.comment
        color: var(--text-washed)

    .token.punctuation
        color: var(--accent)
        font-weight: bolder

    .token.function
        color: var(--accent)
        font-weight: bolder

    .token.operator
        color: var(--accent)
        font-weight: bolder

    .token.keyword
        color: var(--accent-darker)
        font-weight: bold

    .token.builtin
        color: var(--accent)
        font-weight: bolder

    .token.property
        color: var(--primary-text)

    .token.number
        color: var(--primary-text)

    .token.string
        color: var(--primary-text)

// qhana form inputs (from micro frontends)

.qhana-help
    color: var(--text)
    max-width: initial
    box-sizing: border-box
    padding-inline: 0.5rem
    padding-block: 1.3ex

form.qhana-form
    max-width: initial

.qhana-form-label
    @include mat.typography-level($my-typography, 'body-1')
    font-weight: 500
    padding-inline-start: 0.5rem
    color: var(--border-color, currentColor)

.qhana-form-input, input.qhana-form-input, select.qhana-form-input, textarea.qhana-form-input
    color: var(--text)
    background-color: var(--background)
    border: 2px solid var(--border-color, currentColor)
    border-radius: 5px
    max-width: initial
    box-sizing: border-box
    padding-inline: 0.5rem
    padding-block: 1.3ex

.qhana-form-input:focus
    outline: none

.qhana-form-field
    margin-block-end: 0.8rem
    --border-color: var(--text-washed, #333)

.qhana-form-field:hover:not(:focus-within)
    --border-color: var(--text, black)

.qhana-form-field:focus-within
    --border-color: var(--primary-text, black)

.qhana-form-input:focus-visible
    outline: 4px solid var(--accent-darker, black)

.qhana-form-submit
    margin: 0.4rem
    padding-inline: 1em
    background-color: var(--primary, purple)
    color: var(--text-primary, white)
    cursor: pointer
    outline: none
    border: none
    border-radius: 4px
    font-size: 14px
    line-height: 36px
    font-weight: 500

.qhana-form-submit:active
    background-color: var(--primary-lighter, purple)

.qhana-form-submit:focus-visible
    outline: 4px solid var(--accent-darker, black)

.qhana-choose-file-button
    padding-inline: 0.5rem
    padding-block: 1.3ex
    color: var(--primary-text, purple)
    background-color: var(--background, white)
    cursor: pointer
    outline: none
    border: 2px solid var(--primary-text, purple)
    border-radius: 4px
    font-weight: 500

.qhana-choose-file-button:hover
    background-color: var(--primary, purple)
    color: var(--text-primary, white)

.qhana-choose-file-button:active
    background-color: var(--primary-lighter, purple)
    color: var(--text-dark-primary, black)

.qhana-choose-file-button:focus-visible
    outline: 4px solid var(--accent-darker, black)

.qhana-input-description
    @include mat.typography-level($my-typography, 'body-1')

.qhana-input-description p
    margin-block: 0.1em

.qhana-error-message
    color: var(--warn-text, red)

.plugin-micro-frontend
    @include mat.typography-level($my-typography, 'body-1')

.plugin-micro-frontend h1
    @include mat.typography-level($my-typography, 'headline')

.plugin-micro-frontend h2
    @include mat.typography-level($my-typography, 'title')

.plugin-micro-frontend h3
    @include mat.typography-level($my-typography, 'subheading-2')

.plugin-micro-frontend h4
    @include mat.typography-level($my-typography, 'subheading-1')

.qhana-table
    flex-direction: row
    flex-wrap: wrap
    overflow: auto
    border: 2px solid var(--border-color, currentColor)
    border-radius: 5px

.qhana-table table
    border-collapse: collapse

.qhana-table td, .qhana-table th
    border: 2px solid var(--border-color, currentColor)
    text-align: left
    padding: 0.5em

.qhana-table th
    padding-top: 1em
    padding-bottom: 1em
    position: sticky
    top: 0
    z-index: 2
    background-color: var(--primary, purple)
    text-decoration-color: white

.qhana-table tr:hover
    background-color: var(--primary, currentColor)

.qhana-table tr:first-child th
    border-top: 0

.qhana-table tr:last-child td
    border-bottom: 0

.qhana-table tr td:first-child, .qhana-table tr th:first-child
    border-left: 0

.qhana-table tr td:last-child, .qhana-table tr th:last-child
    border-right: 0
